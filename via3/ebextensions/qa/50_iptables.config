files:
    "/root/firewall.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
        #!/bin/sh
        # The following 2 vars grab the ip of the running docker container
        a=`docker ps -q`
        b=`docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $a`
        # Then we flush the DOCKER-USER chain
        iptables --flush DOCKER-USER
        # Block all ports that have not been defined
        sudo iptables --insert DOCKER-USER --protocol tcp --match tcp --match multiport ! --destination-ports 80,443 -j REJECT
        # Accept DNS traffic
        sudo iptables --insert DOCKER-USER --protocol udp --destination-port 53 --jump ACCEPT
        sudo iptables --insert DOCKER-USER --protocol udp --source-port 53 --jump ACCEPT
        # REJECT RCF1918 addresses
        sudo iptables --insert DOCKER-USER --destination 10.0.0.0/8 --jump REJECT
        sudo iptables --insert DOCKER-USER --destination 172.16.0.0/12 --jump REJECT
        sudo iptables --insert DOCKER-USER --destination 192.168.0.0/16 --jump REJECT
        # REJECT AWS metadata service
        sudo iptables --insert DOCKER-USER --destination 169.254.169.254 --jump REJECT
        # ACCEPT AWS DNS
        sudo iptables --insert DOCKER-USER --destination 10.1.0.2 --jump ACCEPT
        # ACCEPT ourself
        sudo iptables --insert DOCKER-USER --destination $b --jump ACCEPT
        # Save the config
        iptables-save > /etc/sysconfig/iptables
commands:
    command1:
        command: /root/firewall.sh
